<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='ElectricVehicle (T12024A3)' inline='true' name='federated.021ojtg16dv6zy1bzce1y0aubp4t' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='T12024A3' name='excel-direct.1mss9ji0mplpyg17alela0aujkol'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/sonic/OneDrive - Deakin University/T12024A3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1mss9ji0mplpyg17alela0aujkol' name='ElectricVehicle' table='[ElectricVehicle$]' type='table'>
          <columns gridOrigin='A1:Q160:no:A1:Q160:0' header='yes' outcome='6'>
            <column datatype='string' name='Index' ordinal='0' />
            <column datatype='string' name='EV_Type' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='string' name='Locality' ordinal='3' />
            <column datatype='integer' name='Age' ordinal='4' />
            <column datatype='string' name='Household_Type' ordinal='5' />
            <column datatype='integer' name='Annual_KM' ordinal='6' />
            <column datatype='string' name='Trip_Type' ordinal='7' />
            <column datatype='string' name='Motivation' ordinal='8' />
            <column datatype='string' name='EV_Towing' ordinal='9' />
            <column datatype='integer' name='Charge_at_Work' ordinal='10' />
            <column datatype='integer' name='Charge_at_Home' ordinal='11' />
            <column datatype='integer' name='Charge_at_Other' ordinal='12' />
            <column datatype='string' name='Calculate_Savings' ordinal='13' />
            <column datatype='integer' name='Fuel_Savings' ordinal='14' />
            <column datatype='integer' name='Maintenance_Savings' ordinal='15' />
            <column datatype='integer' name='Insurance Cost' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1mss9ji0mplpyg17alela0aujkol' name='ElectricVehicle' table='[ElectricVehicle$]' type='table'>
          <columns gridOrigin='A1:Q160:no:A1:Q160:0' header='yes' outcome='6'>
            <column datatype='string' name='Index' ordinal='0' />
            <column datatype='string' name='EV_Type' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='string' name='Locality' ordinal='3' />
            <column datatype='integer' name='Age' ordinal='4' />
            <column datatype='string' name='Household_Type' ordinal='5' />
            <column datatype='integer' name='Annual_KM' ordinal='6' />
            <column datatype='string' name='Trip_Type' ordinal='7' />
            <column datatype='string' name='Motivation' ordinal='8' />
            <column datatype='string' name='EV_Towing' ordinal='9' />
            <column datatype='integer' name='Charge_at_Work' ordinal='10' />
            <column datatype='integer' name='Charge_at_Home' ordinal='11' />
            <column datatype='integer' name='Charge_at_Other' ordinal='12' />
            <column datatype='string' name='Calculate_Savings' ordinal='13' />
            <column datatype='integer' name='Fuel_Savings' ordinal='14' />
            <column datatype='integer' name='Maintenance_Savings' ordinal='15' />
            <column datatype='integer' name='Insurance Cost' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ElectricVehicle]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Q160:no:A1:Q160:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Index</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Index]</local-name>
            <parent-name>[ElectricVehicle]</parent-name>
            <remote-alias>Index</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EV_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EV_Type]</local-name>
            <parent-name>[ElectricVehicle]</parent-name>
            <remote-alias>EV_Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[ElectricVehicle]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Locality</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Locality]</local-name>
            <parent-name>[ElectricVehicle]</parent-name>
            <remote-alias>Locality</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[ElectricVehicle]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Household_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Household_Type]</local-name>
            <parent-name>[ElectricVehicle]</parent-name>
            <remote-alias>Household_Type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual_KM</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Annual_KM]</local-name>
            <parent-name>[ElectricVehicle]</parent-name>
            <remote-alias>Annual_KM</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trip_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Trip_Type]</local-name>
            <parent-name>[ElectricVehicle]</parent-name>
            <remote-alias>Trip_Type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Motivation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Motivation]</local-name>
            <parent-name>[ElectricVehicle]</parent-name>
            <remote-alias>Motivation</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EV_Towing</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EV_Towing]</local-name>
            <parent-name>[ElectricVehicle]</parent-name>
            <remote-alias>EV_Towing</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Charge_at_Work</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Charge_at_Work]</local-name>
            <parent-name>[ElectricVehicle]</parent-name>
            <remote-alias>Charge_at_Work</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Charge_at_Home</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Charge_at_Home]</local-name>
            <parent-name>[ElectricVehicle]</parent-name>
            <remote-alias>Charge_at_Home</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Charge_at_Other</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Charge_at_Other]</local-name>
            <parent-name>[ElectricVehicle]</parent-name>
            <remote-alias>Charge_at_Other</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Calculate_Savings</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Calculate_Savings]</local-name>
            <parent-name>[ElectricVehicle]</parent-name>
            <remote-alias>Calculate_Savings</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fuel_Savings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fuel_Savings]</local-name>
            <parent-name>[ElectricVehicle]</parent-name>
            <remote-alias>Fuel_Savings</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Maintenance_Savings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Maintenance_Savings]</local-name>
            <parent-name>[ElectricVehicle]</parent-name>
            <remote-alias>Maintenance_Savings</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Insurance Cost</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Insurance Cost]</local-name>
            <parent-name>[ElectricVehicle]</parent-name>
            <remote-alias>Insurance Cost</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Annual KM' datatype='integer' name='[Annual_KM]' role='measure' type='quantitative' />
      <column caption='Calculate Savings' datatype='string' name='[Calculate_Savings]' role='dimension' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([EV_Type]) / TOTAL(COUNT([EV_Type]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Charge at Home' datatype='integer' name='[Charge_at_Home]' role='measure' type='quantitative' />
      <column caption='Charge at Other' datatype='integer' name='[Charge_at_Other]' role='measure' type='quantitative' />
      <column caption='Charge at Work' datatype='integer' name='[Charge_at_Work]' role='measure' type='quantitative' />
      <column caption='EV Towing' datatype='string' name='[EV_Towing]' role='dimension' type='nominal' />
      <column caption='EV Type' datatype='string' name='[EV_Type]' role='dimension' type='nominal' />
      <column caption='Fuel Savings' datatype='integer' name='[Fuel_Savings]' role='measure' type='quantitative' />
      <column caption='Household Type' datatype='string' name='[Household_Type]' role='dimension' type='nominal' />
      <column datatype='string' name='[Index]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Insurance Cost]' role='measure' type='quantitative' />
      <column datatype='string' name='[Locality]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Maintenance_Savings]' role='measure' type='quantitative' />
      <column datatype='string' name='[Motivation]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Trip Type' datatype='string' name='[Trip_Type]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='ElectricVehicle' datatype='table' name='[__tableau_internal_object_id__].[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]' role='measure' type='quantitative' />
      <column-instance column='[Fuel_Savings]' derivation='Avg' name='[avg:Fuel_Savings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Insurance Cost]' derivation='Avg' name='[avg:Insurance Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Maintenance_Savings]' derivation='Avg' name='[avg:Maintenance_Savings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EV_Type]' derivation='None' name='[none:EV_Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Fuel_Savings]' derivation='Sum' name='[sum:Fuel_Savings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Insurance Cost]' derivation='Sum' name='[sum:Insurance Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Maintenance_Savings]' derivation='Sum' name='[sum:Maintenance_Savings:qk]' pivot='key' type='quantitative' />
      <group caption='Action (EV Type)' hidden='true' name='[Action (EV Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[EV_Type]' />
        </groupfilter>
      </group>
      <group caption='Action (EV Type,Index)' hidden='true' name='[Action (EV Type,Index)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[EV_Type]' />
          <groupfilter function='level-members' level='[Index]' />
        </groupfilter>
      </group>
      <group caption='Action (EV Type,Locality,Motivation,State,Trip Type)' hidden='true' name='[Action (EV Type,Locality,Motivation,State,Trip Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[EV_Type]' />
          <groupfilter function='level-members' level='[Locality]' />
          <groupfilter function='level-members' level='[Motivation]' />
          <groupfilter function='level-members' level='[State]' />
          <groupfilter function='level-members' level='[Trip_Type]' />
        </groupfilter>
      </group>
      <group caption='Action (EV Type,State)' hidden='true' name='[Action (EV Type,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[EV_Type]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Household Type,Motivation)' hidden='true' name='[Action (Household Type,Motivation)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Household_Type]' />
          <groupfilter function='level-members' level='[Motivation]' />
        </groupfilter>
      </group>
      <group caption='Action (Index)' hidden='true' name='[Action (Index)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Index]' />
        </groupfilter>
      </group>
      <group caption='Action (Motivation,Trip Type)' hidden='true' name='[Action (Motivation,Trip Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Motivation]' />
          <groupfilter function='level-members' level='[Trip_Type]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/sonic/OneDrive/Máy tính/ElectricVehicle (T12024A3).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='06/04/2024 11:56:33 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='ElectricVehicle (T12024A3)' increment-value='%null%' refresh-type='create' rows-inserted='159' timestamp-start='2024-06-04 11:56:32.924' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Index</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Index</remote-alias>
              <ordinal>0</ordinal>
              <family>ElectricVehicle</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>159</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>EV_Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[EV_Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>EV_Type</remote-alias>
              <ordinal>1</ordinal>
              <family>ElectricVehicle</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>2</ordinal>
              <family>ElectricVehicle</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Locality</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Locality]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Locality</remote-alias>
              <ordinal>3</ordinal>
              <family>ElectricVehicle</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Age</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Age]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Age</remote-alias>
              <ordinal>4</ordinal>
              <family>ElectricVehicle</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Household_Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Household_Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Household_Type</remote-alias>
              <ordinal>5</ordinal>
              <family>ElectricVehicle</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Annual_KM</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Annual_KM]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Annual_KM</remote-alias>
              <ordinal>6</ordinal>
              <family>ElectricVehicle</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Trip_Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Trip_Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Trip_Type</remote-alias>
              <ordinal>7</ordinal>
              <family>ElectricVehicle</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Motivation</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Motivation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Motivation</remote-alias>
              <ordinal>8</ordinal>
              <family>ElectricVehicle</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>EV_Towing</remote-name>
              <remote-type>129</remote-type>
              <local-name>[EV_Towing]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>EV_Towing</remote-alias>
              <ordinal>9</ordinal>
              <family>ElectricVehicle</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Charge_at_Work</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Charge_at_Work]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Charge_at_Work</remote-alias>
              <ordinal>10</ordinal>
              <family>ElectricVehicle</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Charge_at_Home</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Charge_at_Home]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Charge_at_Home</remote-alias>
              <ordinal>11</ordinal>
              <family>ElectricVehicle</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Charge_at_Other</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Charge_at_Other]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Charge_at_Other</remote-alias>
              <ordinal>12</ordinal>
              <family>ElectricVehicle</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculate_Savings</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculate_Savings]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculate_Savings</remote-alias>
              <ordinal>13</ordinal>
              <family>ElectricVehicle</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Fuel_Savings</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Fuel_Savings]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Fuel_Savings</remote-alias>
              <ordinal>14</ordinal>
              <family>ElectricVehicle</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Maintenance_Savings</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Maintenance_Savings]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Maintenance_Savings</remote-alias>
              <ordinal>15</ordinal>
              <family>ElectricVehicle</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Insurance Cost</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Insurance Cost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Insurance Cost</remote-alias>
              <ordinal>16</ordinal>
              <family>ElectricVehicle</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>134</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Fuel_Savings:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t].[sum:Fuel_Savings:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Insurance Cost:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t].[sum:Insurance Cost:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t].[sum:Maintenance_Savings:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Maintenance_Savings:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:EV_Type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BEV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PHEV&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FCEV&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='ElectricVehicle' id='ElectricVehicle_C05778139D2647289D9CD1C5F5DB27C2'>
            <properties context=''>
              <relation connection='excel-direct.1mss9ji0mplpyg17alela0aujkol' name='ElectricVehicle' table='[ElectricVehicle$]' type='table'>
                <columns gridOrigin='A1:Q160:no:A1:Q160:0' header='yes' outcome='6'>
                  <column datatype='string' name='Index' ordinal='0' />
                  <column datatype='string' name='EV_Type' ordinal='1' />
                  <column datatype='string' name='State' ordinal='2' />
                  <column datatype='string' name='Locality' ordinal='3' />
                  <column datatype='integer' name='Age' ordinal='4' />
                  <column datatype='string' name='Household_Type' ordinal='5' />
                  <column datatype='integer' name='Annual_KM' ordinal='6' />
                  <column datatype='string' name='Trip_Type' ordinal='7' />
                  <column datatype='string' name='Motivation' ordinal='8' />
                  <column datatype='string' name='EV_Towing' ordinal='9' />
                  <column datatype='integer' name='Charge_at_Work' ordinal='10' />
                  <column datatype='integer' name='Charge_at_Home' ordinal='11' />
                  <column datatype='integer' name='Charge_at_Other' ordinal='12' />
                  <column datatype='string' name='Calculate_Savings' ordinal='13' />
                  <column datatype='integer' name='Fuel_Savings' ordinal='14' />
                  <column datatype='integer' name='Maintenance_Savings' ordinal='15' />
                  <column datatype='integer' name='Insurance Cost' ordinal='16' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_D671EAF294FE4343B5C75E4D0D9569EB]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='fuel savings with KM' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Household Type' />
        <param name='target' value='fuel savings with KM' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action5_671354C240BE4C7682D63B701D0C4E52]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='EVs Metrix Dashboard' type='sheet' worksheet='Detail' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='EVs Metrix Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action6_17F673FEF3844C5E86084A8B4C934CDB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='EVs Metrix Dashboard' type='sheet' worksheet='EV Owner Levels' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='EVs Metrix Dashboard' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action6_73D6CF17E0C84AD187D1232D241AC01D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='EVs Metrix Dashboard' type='sheet' worksheet='Market Share' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='EVs Metrix Dashboard' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action6_AF1C2AB84DCB4CCE9D7D5684FD0E23DC]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='EVs Metrix Dashboard' type='sheet' worksheet='Saving Of EVs' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='EVs Metrix Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action6_F60AD7408869412F8DC9C8C0AD499552]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='EVs Metrix Dashboard' type='sheet' worksheet='Locality' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='EVs Metrix Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Detail'>
      <table>
        <view>
          <datasources>
            <datasource caption='ElectricVehicle (T12024A3)' name='federated.021ojtg16dv6zy1bzce1y0aubp4t' />
          </datasources>
          <datasource-dependencies datasource='federated.021ojtg16dv6zy1bzce1y0aubp4t'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='Annual KM' datatype='integer' name='[Annual_KM]' role='measure' type='quantitative' />
            <column caption='Charge at Home' datatype='integer' name='[Charge_at_Home]' role='measure' type='quantitative' />
            <column caption='Charge at Other' datatype='integer' name='[Charge_at_Other]' role='measure' type='quantitative' />
            <column caption='Charge at Work' datatype='integer' name='[Charge_at_Work]' role='measure' type='quantitative' />
            <column caption='EV Towing' datatype='string' name='[EV_Towing]' role='dimension' type='nominal' />
            <column caption='EV Type' datatype='string' name='[EV_Type]' role='dimension' type='nominal' />
            <column caption='Fuel Savings' datatype='integer' name='[Fuel_Savings]' role='measure' type='quantitative' />
            <column datatype='string' name='[Index]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Insurance Cost]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Maintenance_Savings]' role='measure' type='quantitative' />
            <column datatype='string' name='[Motivation]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Trip Type' datatype='string' name='[Trip_Type]' role='dimension' type='nominal' />
            <column-instance column='[Age]' derivation='Avg' name='[avg:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Annual_KM]' derivation='Avg' name='[avg:Annual_KM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Charge_at_Home]' derivation='Avg' name='[avg:Charge_at_Home:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Charge_at_Other]' derivation='Avg' name='[avg:Charge_at_Other:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Charge_at_Work]' derivation='Avg' name='[avg:Charge_at_Work:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fuel_Savings]' derivation='Avg' name='[avg:Fuel_Savings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Insurance Cost]' derivation='Avg' name='[avg:Insurance Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Maintenance_Savings]' derivation='Avg' name='[avg:Maintenance_Savings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EV_Towing]' derivation='None' name='[none:EV_Towing:nk]' pivot='key' type='nominal' />
            <column-instance column='[EV_Type]' derivation='None' name='[none:EV_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Trip_Type]' derivation='None' name='[none:Trip_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Charge_at_Other]' derivation='Sum' name='[sum:Charge_at_Other:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Annual_KM:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Fuel_Savings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Insurance Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Maintenance_Savings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Charge_at_Work:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Charge_at_Home:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Charge_at_Other:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Age:qk]&quot;</bucket>
              <bucket>&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Annual_KM:qk]&quot;</bucket>
              <bucket>&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Fuel_Savings:qk]&quot;</bucket>
              <bucket>&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Insurance Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Maintenance_Savings:qk]&quot;</bucket>
              <bucket>&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Charge_at_Work:qk]&quot;</bucket>
              <bucket>&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Charge_at_Home:qk]&quot;</bucket>
              <bucket>&quot;[federated.021ojtg16dv6zy1bzce1y0aubp4t].[sum:Charge_at_Other:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type)]'>
            <groupfilter function='level-members' level='[EV_Type]' user:ui-action-filter='[Action6_AF1C2AB84DCB4CCE9D7D5684FD0E23DC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,Index)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_D8AF24414AE449118A84198237CF713E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[EV_Type]' />
              <groupfilter function='level-members' level='[Index]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_73D6CF17E0C84AD187D1232D241AC01D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[EV_Type]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (Index)]'>
            <groupfilter function='level-members' level='[Index]' user:ui-action-filter='[Action6_AF1C2AB84DCB4CCE9D7D5684FD0E23DC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (Motivation,Trip Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_2BC37A1C0DCB4B06917CF6EB953A5B52]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Motivation]' />
              <groupfilter function='level-members' level='[Trip_Type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action6_73D6CF17E0C84AD187D1232D241AC01D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[:Measure Names]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,Index)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (Motivation,Trip Type)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (State)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,State)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (Index)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[:Measure Names]' value='129' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Type:nk] / ([federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Trip_Type:nk] / [federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Towing:nk]))</rows>
        <cols>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E2B680A2-0D69-4342-AA5C-8BE5BF8E8ABF}' />
    </worksheet>
    <worksheet name='EV Owner Levels'>
      <table>
        <view>
          <datasources>
            <datasource caption='ElectricVehicle (T12024A3)' name='federated.021ojtg16dv6zy1bzce1y0aubp4t' />
          </datasources>
          <datasource-dependencies datasource='federated.021ojtg16dv6zy1bzce1y0aubp4t'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[EV_Type]' role='dimension' type='nominal' />
            <column caption='Household Type' datatype='string' name='[Household_Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Index]' role='dimension' type='nominal' />
            <column datatype='string' name='[Locality]' role='dimension' type='nominal' />
            <column datatype='string' name='[Motivation]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Trip Type' datatype='string' name='[Trip_Type]' role='dimension' type='nominal' />
            <column-instance column='[Age]' derivation='Avg' name='[avg:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EV_Type]' derivation='Count' name='[cnt:EV_Type:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Household_Type]' derivation='None' name='[none:Household_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Motivation]' derivation='None' name='[none:Motivation:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type)]'>
            <groupfilter function='level-members' level='[EV_Type]' user:ui-action-filter='[Action6_AF1C2AB84DCB4CCE9D7D5684FD0E23DC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,Index)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_D8AF24414AE449118A84198237CF713E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[EV_Type]' />
              <groupfilter function='level-members' level='[Index]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,Locality,Motivation,State,Trip Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_671354C240BE4C7682D63B701D0C4E52]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[EV_Type]' />
              <groupfilter function='level-members' level='[Locality]' />
              <groupfilter function='level-members' level='[Motivation]' />
              <groupfilter function='level-members' level='[State]' />
              <groupfilter function='level-members' level='[Trip_Type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_73D6CF17E0C84AD187D1232D241AC01D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[EV_Type]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (Index)]'>
            <groupfilter function='level-members' level='[Index]' user:ui-action-filter='[Action6_AF1C2AB84DCB4CCE9D7D5684FD0E23DC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action6_73D6CF17E0C84AD187D1232D241AC01D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Motivation:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[cnt:EV_Type:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,Index)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (State)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,State)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,Locality,Motivation,State,Trip Type)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (Index)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Age:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Age:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e6e6e6</color>
                <color>#dbdbdb</color>
                <color>#d1d1d1</color>
                <color>#c6c6c6</color>
                <color>#bcbcbc</color>
                <color>#b1b1b1</color>
                <color>#a6a6a6</color>
                <color>#9c9c9c</color>
                <color>#919191</color>
                <color>#878787</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Age:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Household_Type:nk] / [federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Motivation:nk])</rows>
        <cols>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[cnt:EV_Type:qk]</cols>
      </table>
      <simple-id uuid='{B691EFFF-D286-4CCA-8116-D2992A8C8328}' />
    </worksheet>
    <worksheet name='Locality'>
      <table>
        <view>
          <datasources>
            <datasource caption='ElectricVehicle (T12024A3)' name='federated.021ojtg16dv6zy1bzce1y0aubp4t' />
          </datasources>
          <datasource-dependencies datasource='federated.021ojtg16dv6zy1bzce1y0aubp4t'>
            <column caption='EV Type' datatype='string' name='[EV_Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Index]' role='dimension' type='nominal' />
            <column datatype='string' name='[Locality]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[EV_Type]' derivation='Count' name='[cnt:EV_Type:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EV_Type]' derivation='None' name='[none:EV_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Locality]' derivation='None' name='[none:Locality:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type)]'>
            <groupfilter function='level-members' level='[EV_Type]' user:ui-action-filter='[Action6_AF1C2AB84DCB4CCE9D7D5684FD0E23DC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,Index)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_D8AF24414AE449118A84198237CF713E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[EV_Type]' />
              <groupfilter function='level-members' level='[Index]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (Index)]'>
            <groupfilter function='level-members' level='[Index]' user:ui-action-filter='[Action6_AF1C2AB84DCB4CCE9D7D5684FD0E23DC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action6_73D6CF17E0C84AD187D1232D241AC01D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (State)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,Index)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (Index)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title'>
            <format attr='text-align' value='left' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Type:nk]' />
              <wedge-size column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[cnt:EV_Type:qk]' />
              <text column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[cnt:EV_Type:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Locality:nk]</cols>
      </table>
      <simple-id uuid='{C7605C5B-7619-46BE-BB19-C8B545F4CDD6}' />
    </worksheet>
    <worksheet name='Market Share'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; </run>
            <run fontsize='9'>(Click to state to filter dashboard)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ElectricVehicle (T12024A3)' name='federated.021ojtg16dv6zy1bzce1y0aubp4t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.021ojtg16dv6zy1bzce1y0aubp4t'>
            <column caption='EV Type' datatype='string' name='[EV_Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Index]' role='dimension' type='nominal' />
            <column datatype='string' name='[Locality]' role='dimension' type='nominal' />
            <column datatype='string' name='[Motivation]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Trip Type' datatype='string' name='[Trip_Type]' role='dimension' type='nominal' />
            <column-instance column='[EV_Type]' derivation='Count' name='[cnt:EV_Type:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type)]'>
            <groupfilter function='level-members' level='[EV_Type]' user:ui-action-filter='[Action6_AF1C2AB84DCB4CCE9D7D5684FD0E23DC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,Index)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_D8AF24414AE449118A84198237CF713E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[EV_Type]' />
              <groupfilter function='level-members' level='[Index]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,Locality,Motivation,State,Trip Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_671354C240BE4C7682D63B701D0C4E52]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[EV_Type]' />
              <groupfilter function='level-members' level='[Locality]' />
              <groupfilter function='level-members' level='[Motivation]' />
              <groupfilter function='level-members' level='[State]' />
              <groupfilter function='level-members' level='[Trip_Type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (Index)]'>
            <groupfilter function='level-members' level='[Index]' user:ui-action-filter='[Action6_AF1C2AB84DCB4CCE9D7D5684FD0E23DC]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (Motivation,Trip Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_17F673FEF3844C5E86084A8B4C934CDB]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Motivation]' />
              <groupfilter function='level-members' level='[Trip_Type]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (Motivation,Trip Type)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,Index)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,Locality,Motivation,State,Trip Type)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (Index)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Longitude (generated)]' field-type='quantitative' max='18832180.540862922' min='11212659.659953818' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Latitude (generated)]' field-type='quantitative' max='-1070881.0811386574' min='-5231771.7002801616' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[cnt:EV_Type:qk]' />
              <lod column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:State:nk]' />
              <geometry column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Latitude (generated)]</rows>
        <cols>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4BEC2CEC-C25D-4CF9-AAF7-79B9F88DF6FC}' />
    </worksheet>
    <worksheet name='Market Share234'>
      <table>
        <view>
          <datasources>
            <datasource caption='ElectricVehicle (T12024A3)' name='federated.021ojtg16dv6zy1bzce1y0aubp4t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.021ojtg16dv6zy1bzce1y0aubp4t'>
            <column caption='EV Type' datatype='string' name='[EV_Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Index]' role='dimension' type='nominal' />
            <column datatype='string' name='[Locality]' role='dimension' type='nominal' />
            <column datatype='string' name='[Motivation]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Trip Type' datatype='string' name='[Trip_Type]' role='dimension' type='nominal' />
            <column-instance column='[EV_Type]' derivation='Count' name='[cnt:EV_Type:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EV_Type]' derivation='None' name='[none:EV_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Locality]' derivation='None' name='[none:Locality:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,Index)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_D8AF24414AE449118A84198237CF713E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[EV_Type]' />
              <groupfilter function='level-members' level='[Index]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,Locality,Motivation,State,Trip Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_671354C240BE4C7682D63B701D0C4E52]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[EV_Type]' />
              <groupfilter function='level-members' level='[Locality]' />
              <groupfilter function='level-members' level='[Motivation]' />
              <groupfilter function='level-members' level='[State]' />
              <groupfilter function='level-members' level='[Trip_Type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_73D6CF17E0C84AD187D1232D241AC01D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[EV_Type]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (Motivation,Trip Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_2BC37A1C0DCB4B06917CF6EB953A5B52]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Motivation]' />
              <groupfilter function='level-members' level='[Trip_Type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action6_73D6CF17E0C84AD187D1232D241AC01D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,Index)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (Motivation,Trip Type)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (State)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,State)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,Locality,Motivation,State,Trip Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[cnt:EV_Type:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[cnt:EV_Type:qk]</rows>
        <cols>([federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:State:nk] / [federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Locality:nk])</cols>
      </table>
      <simple-id uuid='{896AE608-5773-4BAF-9687-63A08E861698}' />
    </worksheet>
    <worksheet name='Saving'>
      <table>
        <view>
          <datasources>
            <datasource caption='ElectricVehicle (T12024A3)' name='federated.021ojtg16dv6zy1bzce1y0aubp4t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.021ojtg16dv6zy1bzce1y0aubp4t'>
            <column caption='EV Type' datatype='string' name='[EV_Type]' role='dimension' type='nominal' />
            <column caption='Fuel Savings' datatype='integer' name='[Fuel_Savings]' role='measure' type='quantitative' />
            <column datatype='string' name='[Index]' role='dimension' type='nominal' />
            <column datatype='string' name='[Locality]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Maintenance_Savings]' role='measure' type='quantitative' />
            <column datatype='string' name='[Motivation]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Trip Type' datatype='string' name='[Trip_Type]' role='dimension' type='nominal' />
            <column-instance column='[Fuel_Savings]' derivation='Avg' name='[avg:Fuel_Savings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Maintenance_Savings]' derivation='Avg' name='[avg:Maintenance_Savings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EV_Type]' derivation='None' name='[none:EV_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Index]' derivation='None' name='[none:Index:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,Locality,Motivation,State,Trip Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_671354C240BE4C7682D63B701D0C4E52]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[EV_Type]' />
              <groupfilter function='level-members' level='[Locality]' />
              <groupfilter function='level-members' level='[Motivation]' />
              <groupfilter function='level-members' level='[State]' />
              <groupfilter function='level-members' level='[Trip_Type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_73D6CF17E0C84AD187D1232D241AC01D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[EV_Type]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (Motivation,Trip Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_2BC37A1C0DCB4B06917CF6EB953A5B52]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Motivation]' />
              <groupfilter function='level-members' level='[Trip_Type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action6_73D6CF17E0C84AD187D1232D241AC01D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (Motivation,Trip Type)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (State)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,State)]</column>
            <column>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[Action (EV Type,Locality,Motivation,State,Trip Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Fuel_Savings:qk]' field-type='quantitative' max='6161.3100775193798' min='1581.3100775193798' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Maintenance_Savings:qk]' field-type='quantitative' max='993.2914285714287' min='180.29142857142858' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Type:nk]' />
              <lod column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Index:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Maintenance_Savings:qk]</rows>
        <cols>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Fuel_Savings:qk]</cols>
      </table>
      <simple-id uuid='{46DB9FBD-5B2C-489B-8486-46DF7DA90282}' />
    </worksheet>
    <worksheet name='Saving Of EVs'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; </run>
            <run fontsize='9'>(Click to EV to filter)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ElectricVehicle (T12024A3)' name='federated.021ojtg16dv6zy1bzce1y0aubp4t' />
          </datasources>
          <datasource-dependencies datasource='federated.021ojtg16dv6zy1bzce1y0aubp4t'>
            <column caption='Fuel Savings' datatype='integer' name='[Fuel_Savings]' role='measure' type='quantitative' />
            <column datatype='string' name='[Index]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Insurance Cost]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Maintenance_Savings]' role='measure' type='quantitative' />
            <column-instance column='[Fuel_Savings]' derivation='Avg' name='[avg:Fuel_Savings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Insurance Cost]' derivation='Avg' name='[avg:Insurance Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Index]' derivation='None' name='[none:Index:nk]' pivot='key' type='nominal' />
            <column-instance column='[Maintenance_Savings]' derivation='Sum' name='[sum:Maintenance_Savings:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[sum:Maintenance_Savings:qk]' field-type='quantitative' max='800' max-size='1' min='500' min-size='0' type='rangesize' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[sum:Maintenance_Savings:qk]' />
              <lod column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Index:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.69165748357772827' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Insurance Cost:qk]</rows>
        <cols>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Fuel_Savings:qk]</cols>
      </table>
      <simple-id uuid='{E21CD4BA-C7AC-4AEC-88BF-CBD6164D036E}' />
    </worksheet>
    <worksheet name='fuel savings with KM'>
      <table>
        <view>
          <datasources>
            <datasource caption='ElectricVehicle (T12024A3)' name='federated.021ojtg16dv6zy1bzce1y0aubp4t' />
          </datasources>
          <datasource-dependencies datasource='federated.021ojtg16dv6zy1bzce1y0aubp4t'>
            <column caption='Annual KM' datatype='integer' name='[Annual_KM]' role='measure' type='quantitative' />
            <column caption='EV Towing' datatype='string' name='[EV_Towing]' role='dimension' type='nominal' />
            <column caption='EV Type' datatype='string' name='[EV_Type]' role='dimension' type='nominal' />
            <column caption='Fuel Savings' datatype='integer' name='[Fuel_Savings]' role='measure' type='quantitative' />
            <column caption='Household Type' datatype='string' name='[Household_Type]' role='dimension' type='nominal' />
            <column-instance column='[Annual_KM]' derivation='Avg' name='[avg:Annual_KM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fuel_Savings]' derivation='Avg' name='[avg:Fuel_Savings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EV_Towing]' derivation='None' name='[none:EV_Towing:nk]' pivot='key' type='nominal' />
            <column-instance column='[EV_Type]' derivation='None' name='[none:EV_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Household_Type]' derivation='None' name='[none:Household_Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Fuel_Savings:qk]' field-type='quantitative' max='4132.3120040884342' min='1262.575945909588' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Annual_KM:qk]' field-type='quantitative' max='15655.000296467875' min='4176.0560637524877' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Type:nk]' />
              <size column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Household_Type:nk]' />
              <lod column='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Towing:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='813' />
                <format attr='maxwidth' value='813' />
                <format attr='minheight' value='700' />
                <format attr='maxheight' value='700' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Annual_KM:qk]</rows>
        <cols>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Fuel_Savings:qk]</cols>
      </table>
      <simple-id uuid='{ACEFFF10-4CEF-4047-937A-DD5B1EDE4976}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='EVs Metrix Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='900' maxwidth='1000' minheight='900' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='34' param='vert' type-v2='layout-flow' w='98400' x='800' y='889'>
            <zone h='5445' id='35' type-v2='title' w='98400' x='800' y='889'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92777' id='31' param='horz' type-v2='layout-flow' w='98400' x='800' y='6334'>
              <zone h='92777' id='29' type-v2='layout-basic' w='98400' x='800' y='6334'>
                <zone h='70054' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='6334'>
                  <zone h='70054' id='5' type-v2='layout-basic' w='98400' x='800' y='6334'>
                    <zone h='42717' id='16' name='Market Share' w='48867' x='800' y='6334'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='42717' id='20' name='EV Owner Levels' w='49533' x='49667' y='6334'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='27337' id='26' name='Locality' w='40198' x='800' y='49051'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='27337' id='28' name='Saving Of EVs' w='58202' x='40998' y='49051'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone h='22723' id='12' name='Detail' w='98400' x='800' y='76388'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='11000' id='22' name='EV Owner Levels' pane-specification-id='1' param='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Age:qk]' type-v2='color' w='14000' x='52300' y='42222' />
        <zone h='10556' id='27' leg-item-layout='vert' name='Locality' pane-specification-id='0' param='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Type:nk]' type-v2='color' w='33700' x='30100' y='49222' />
        <zone h='11000' id='32' name='Saving Of EVs' pane-specification-id='4' param='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[sum:Maintenance_Savings:qk]' type-v2='color' w='18300' x='43900' y='72667' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='39' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='38' param='vert' type-v2='layout-flow' w='98400' x='800' y='889'>
                <zone h='5445' id='35' type-v2='title' w='98400' x='800' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42717' id='16' is-fixed='true' name='Market Share' w='48867' x='800' y='6334'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42717' id='20' is-fixed='true' name='EV Owner Levels' w='49533' x='49667' y='6334'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11000' id='22' name='EV Owner Levels' pane-specification-id='1' param='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Age:qk]' type-v2='color' w='14000' x='52300' y='42222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='238' h='27337' id='26' is-fixed='true' name='Locality' w='40198' x='800' y='49051'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10556' id='27' leg-item-layout='vert' name='Locality' pane-specification-id='0' param='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Type:nk]' type-v2='color' w='33700' x='30100' y='49222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='238' h='27337' id='28' is-fixed='true' name='Saving Of EVs' w='58202' x='40998' y='49051'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11000' id='32' name='Saving Of EVs' pane-specification-id='4' param='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[sum:Maintenance_Savings:qk]' type-v2='color' w='18300' x='43900' y='72667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='197' h='22723' id='12' is-fixed='true' name='Detail' w='98400' x='800' y='76388'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6AB77648-96CE-4410-A631-985E4FA541CE}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='fuel savings with KM'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='11' param='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Type:nk]' type='color' />
            <card pane-specification-id='11' param='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Household_Type:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Towing:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Type:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Household_Type:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Locality:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Motivation:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:State:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Trip_Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5BA156C3-FC05-427F-901B-171B153FBAA8}' />
    </window>
    <window class='worksheet' name='Detail'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='26' type='pages' />
            <card size='152' type='filters' />
            <card size='179' type='marks' />
            <card size='195' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Towing:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Type:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Locality:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Motivation:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:State:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Trip_Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E8D32095-9F50-43C5-9654-F25B2512E12B}' />
    </window>
    <window class='worksheet' name='Market Share234'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[attr:EV_Type:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Type:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Locality:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6BF59214-5171-49A5-ACE6-672E69CE791E}' />
    </window>
    <window class='worksheet' name='Saving'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[cnt:EV_Type:qk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Type:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Household_Type:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Index:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:State:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[sum:Age:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FFF589B3-3EE8-4381-85F0-B401024C7D45}' />
    </window>
    <window class='worksheet' name='EV Owner Levels'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[avg:Age:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[cnt:Motivation:qk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Type:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Household_Type:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Motivation:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Trip_Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4195B184-BEC7-41DC-BC2D-9941CD610141}' />
    </window>
    <window class='dashboard' maximized='true' name='EVs Metrix Dashboard'>
      <viewpoints>
        <viewpoint name='Detail'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='EV Owner Levels' />
        <viewpoint name='Locality'>
          <highlight field='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Market Share'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[cnt:EV_Type:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Saving Of EVs'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F4942B22-CD32-4A4C-B7F3-F188C6DADD8B}' />
    </window>
    <window class='worksheet' name='Market Share'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[cnt:EV_Type:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[cnt:EV_Type:qk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Type:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Locality:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BC8F4F92-C90F-4AA4-A3C7-BB7C6ADE8BAB}' />
    </window>
    <window class='worksheet' name='Locality'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Type:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Locality:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C3C8E9F3-A47F-48A7-A252-900C9622F333}' />
    </window>
    <window class='worksheet' name='Saving Of EVs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.021ojtg16dv6zy1bzce1y0aubp4t].[sum:Maintenance_Savings:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[cnt:EV_Type:qk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:EV_Type:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[none:Index:nk]</field>
            <field>[federated.021ojtg16dv6zy1bzce1y0aubp4t].[sum:Insurance Cost:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D7138CD2-6733-41EE-B798-B2E011C9D0D5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Detail' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='EV Owner Levels' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='EVs Metrix Dashboard' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Locality' width='192'>
      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
      +//vQ0WN7UyDrgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Market Share' width='192'>
      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
      nBcIvMH/B+ihnZoOzHT+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Market Share234' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Saving' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAadklEQVR4nO2daXAj6Xnff92NkyAJEhzeHM5whjPD4Wh2ZUmJlOjwITuWFZc3kuPESblS
      qVQ+5CjHlS/O9S1JxaVKWU5iR7biikvWFUtey+uVvLvZ9a52FWkl7ezsHOSQwxskARIgQZC4
      G43ufvOBXO5B7Ax4zmDw/KpY4MvG++dDEH+83f087/tqSimFIDQo+oMOQBAeJMdiAMdxDtXf
      tu0jikS0ROveWjICCA2NGEBoaMQAQkMjBhAaGjGA0NCIAYSGRgwgNDSe/XZwKwVujs1g+AN4
      3BLepggho0I6k6V36AqnWv3HEacgHAv7NoCme/AaBvlCkaH+UyzH1nBPRRi9coHleIb2UAeu
      63KYCgvXdY8s8SFaonUvrX0bAN1Hc8hLc6QDu2LiCwSJhHxMTCxw9uIVDMMA2H08CLZt4/Hs
      PzTREq39au1/BNA0hoZHdtsDO49dPQPVOwjCQ4xcBAsNjRhAaGjEAEJDIwYQGhoxgNDQiAGE
      hmb/BlCKjbUE+ZKFWcixns7gOhXiq8ljCE8QjpcDlEJkWc/a2GszeAwDA0U6pXMqHCS2lmeg
      q/k44hSEY2H/iTBvM4a9wmbRpKujnQCKLSDc1kpurYzjBKUUQrTqRusAuWUdj0dj6Nw5dCtP
      xlScjYSYmktwceQShq4BUgohWvWhdchSiHa6dr670tZxJMEJwkkid4GEhkYMIDQ0YgChoRED
      CA2NGEBoaMQAQkOz79ugSikW52fwhNrx2EWyZTjdFSa6ss6FCxfwiKWEOmL/mQVVYStTwDBd
      DNfEG4qwkkxx/nSE+Eqagd4wruseKijXdQ+9wrRoiVYtWvsfARwLI9ACrsng0DCJhSim34tp
      ltE9zej69hDw5uNBUEodqr9oiVatWvvPBHtCnGr14g11UTELBDq7GepoYXklxZnBVjRt53lv
      fnNADttftESrFq0DlUL0DpzZabXSvvPd2TOyKoRQf8glq9DQiAGEhkYMIDQ0YgChoREDCA2N
      GEBoaA5QCuFw984dPE1hgrpNxlT0RULEkxsMXRol5KtPTymlWE3n6Qw34fXsfzpnpmDi8xgE
      /d5q4tgbaYz2NrRDTBUVjp4DlEIoikUTD16MoJ+IVyOeK3F5ZJDllQ0CA5G6nBSfL1n8xv94
      jn/+Sx/kE48P7lvrc1/7AcMDEf7R37q6t1++QPI3/w2Rf/kv8D/+2L7iqgXROriWpvb5TnXt
      PDduzaN7dJq8ULIUba0BLMsk3D1Md3sQx3HqblK8UoqJxRTnetuqf4rfR2sllaMp4KWtOVBV
      21pYwDcwgObz7SuuWhCtg2vt2wAohVWx0HQPhqawXfB6dCzLxu/f/ufWowFEqzG19q+oafh8
      b+0D5tt5n7/55heEeqI+r1gF4YgQAwgNjRhAaGjEAEJDIwYQGhoxgNDQ7NsAyrGYmZrih9fe
      YHL8FtNzi6wuzTN2+wbpnHUcMR4bk3PLLK+sAeC4Lq/cjLKZK9XUdzWxxu3Jud32RHSd+Hr2
      QHEUTIsf3onhuvdPyTiOw7VbC7hO9YUHYutZJqLru217+TXcTKy6luvy6vgypXLlQHE/Cux/
      SqTho7+nnWB7N3p5i9XEBirSxujoMMvxLcJNHXVTCvFn3x1joLOVX/vbEYpmhS8+fZ1/9sQH
      +ZtXqk/vfLvW92/Ocn1qhdEL29NDv/ndOwz3t/OrP3Nl33HNLG/wv759ncuDEZqD986nZHNF
      /vDpa1wc6iTUFNij9d03FlhY3eLf/9pHASi/+nsYQ5/A84F/vEdrK2/yB0+/zr/9hx/l4kBk
      j9ZhqQet/WeCUSwuLjE4OEh8cYH1zQI93WFSqU0GL1whHPTUTSbYqlTQNR2Px0ApRalsE/B5
      0PXqk6/fruU4No7j4tspbbAqDrqu4TFqG1TfrqWUolxx8HuN+078VkpRtmz8Ps/uc9+uZTsu
      rlL4dgr6lF0G3UDT974G1X5vPWRvj1LrAAa4P/ViANESLbkIFhoaMYDQ0IgBhIZGDCA0NO9p
      gHK5vu7pC8JBqGqASsXmD7/6JKvJ9WqHBeGRYc99pUqlwu988SsoV8koIDzy7BkBKhWbT378
      I3zqkx/j7GD/ng5vlkL86NoNZu/e4Y2b46wsLTB2+ybp/MNlmLWNTe7MLO+23c0o9sL3dttT
      C3Fiq9ujnOO6vHwzSjq7XQrhKsW1u3Hype2/qVSucO3uCs7O3geJxDrjdxcOFFeuUOL/3VrY
      XaO+UMjz45uTuDvtlUSaien47vPvTMVYTW4CoFwHO/oDlKpeChFNbHF7LrnbHrsbI7G2tdu+
      PrVC7D1KNnLZHK/fnjn0/g71xB4DNDUF+eDjozx+5VLVDprhY6AnwsDgWXRvE30tTaQritHR
      82Q3tnAcZzfVfNCvw/Z/8+sHN+f58nNv7Latyb/EfOW/7ra/+eItXnhtCtu2yRfKfOHPr3Fr
      dhXbtikUy/z+U68zEV3Dtm3m4ml+/y+us5UrYds233tjlq88+8aB4ppYSPLFp6+zmS1i2zbT
      Cyt84anXyeby2LbNS9dm+frzN3ef/9XnbvLy67PYto1T3MR86T/jFDNVX6//+9osX3vh9m77
      K8++wfeuz+22v/TsTV6+sVA1rjuzMb749HWKxdKRvP5H9X88Tq2qmWC7kGI+tsFsPMWnf+aj
      7zqqWIwuMnjmDNHZKTKmS28kxNrGFoPDVwg3PTylEI7jYJYtQk3B7cidCjgWmi8EQNmy0HUd
      r8eDUop8yaIp4MXQdZRSmDslB7qmbR8vlmlu8qNp2s4L6BAI+O8VQlVc1yVXMGltDqJpGsp1
      KZllgsHAjraD47j4d1anMMsWHsPA4zFAKVSlhOYNQpXyBct2cBxF0L/dNk0Lj2enL9sjmcfQ
      q6595LouhWKJ5lDTkazFf1T/x+PUqmoAM73I1569wQeunuMnHnts37/gYTGAaInW/bSq3gUy
      vEEiIYO56Rkm56qX0grCo0BVA9jlPP5wF8HmFkqZZLWnCMIjQVUD+MN9GMUkTS0Rrl7d/ymQ
      INQLVU+qzM0lvB1DnO2L4PVWXyZQEB4F9owASilypiIxP8btiekHEZMgnBhVT4EKuRxN4QhD
      VRJhgvAosccAmqZx9tJjdDbBq6+9UbWTWcyTzRcp5LIk1zdQrk16c6vqcwXhYaZ6MVwpB4EO
      /u4Tv7DnmHJtxsfuUCiWmJ2domzZLM7PU8ylWEkVjj3g48KuVPjK098jvrp910vZFqW/+hzO
      2iwA8bUMX3jqGgVzuzTi9bsrfPO7d3b7f+OlO3zv1uJu+5svjvH9W1EAzHKF//mtH7O4ul3O
      kFzb4ivfvoa1sxqDk4pSeuG3UFb1FSmefuk2NyeWAHAti8yTf4aqbPetJJPkvvmnu+378Rff
      n2J8Ya2m5zYCVS+CHXOL67fGWdvY4DO/+Kl3HFOqjGY0sbGe5MLFERam59Fbm7nYc4rlRAnH
      CdTNqhBvx6pslzt8cKRId6cNlTJOcgKn8NMo2yZTKDG/solZtvB7dJKbeaKJrV3tpeQWGmq3
      vZjMoOvbGeNypcLcSpqtfIl+u4VsflurbFXQDQ23uLn9uypl0PfedFhKbBL0Gdi2jSqXsaJR
      bMvazhpns1jRxd32/VhMbtEa8r3na1IPKzkcpdZ7lEJsMDYdYyNv8rMf//A7jimlWJidAn8L
      PlUmW3Lo7wqzvJpi+NJlAh5NMsGiVTdaexSVUtyNrlLOrVMs7v1E0TSNcxdG9vw8HOk6kuAE
      4SSpeg2wGp2iaLRzurv9pOMRhBNlzwigaRo/9+nPYpbLRzbkCMLDStURwEwv8sdPPsPEnfGT
      jkcQTpSqBvA2t9PmqZBI5086HkE4UaoaoLy1ysiHf5ZwUE6BhEebqgYIdg6TuvtDlL/lpOMR
      hBOlejVoaoEsLbRqVZJZSpFaW6GiBWgyHDKmS097iMXVFOfODWEcfiadIJwYVUcAPdCKU9wg
      k917DaCUxdR0FNu2WdvIoAo55uIJBrpCxFa3drPAruse+Ouw/Y9Day6a4N/97jNksgVc1+X5
      V8f4/Fdf2D3+W19+hT95/tZu+z/98St87YXbuK5LNl/iN37nO9yeXsF1XaZno/yH3/0W+Xwe
      13W5Ox3jN3/7KfK5Iq7r8q1XJvjc17+/q/Uf/+hFnnzpdl29XvWiVXUE0HWNQqGEr2lvbY9C
      EW7vpJjbRNcMFGrHGIojmEf90BJuCfL4cA9+3/ZL1t8VxnXfWj7k8plTdLc3v63dSU9ku+3z
      Grx/uIdIeHtyfltriMeGe/Du3GZub23i/Rd68Hq3s+eD3W3vmLR+ZaiL012tx/sHNijVJ8Vv
      RHnl1jKmZfHEpz75zoNKsZaI43pDNOk2GVPR3R5iaXWdc0Nn0TWZFC9a9aNVVdEItFAubNHU
      emrvQU2jq/etLYTe/FwaPhc6kuAE4SSpPinezJHJlY9kbRhBeJipnggLtOAJBBjqrzICCMIj
      RFUDOHaZ3OYG41MHW/tSEOqFqtcAFcviiV/5BxQ34tUOC8IjQ9URYGZynL98+inmYrI/gPBo
      U9UAIyOXaIt00docPOl4BOFEuUcmOE02VyURplxuXr/G8uoaUxNjTM8tkohFGbt9k81CbROz
      65GyZXN7bg3X3U6bpDJFZmIbNfV1XcWPJ2O7ew1kCyavji/jONXX4V9OpBmbXdlt355dJbaz
      xr/juFyfjL0jCXcvzIlJKklZ3vK9qD4l8u4Uhr69k/peNELNTWxtbhEJhUimNqGtldHR8yzH
      N2kNdOymmw+K6z58k6mnl1N8/k9/xH//9Z8nHPLz4vV5rk+v8l/+6U/ft2+mUObz3/gR/+qX
      /xofvtzPrZlV/tuTr3Fp8BQdrXtH2e+8OsXkYorP//r2NNMvPv06jw93808+/QHSmSK//Sev
      8nv/+tO0Ngfu+zem//cfEfjgB2j9e79S09/5ML72x6lVNRNcya/zf/78edo6e/ild2WClaow
      OzVHWem0BT2sbeTo7g6TTm8xcP4K7SHvI5kJdpUikyvR1rK9pn/FdrBsh1DAd9++Sik28ybh
      kB9D13Ecl1SmQFd7c9VcS6lsUbFdWkPbb/BswcTnMQj4vSilyORNws2B3b73+hudXA7N70f3
      3T/O+2ntl3rQeo9lUfJ09Q1iWuU9xzTNy4WRtybFD5zdfuwf2PPURwpd02hp8u2+6bweo+om
      E9XQNI1Iy1uf9Iah09EafM9EY9DvI/i2fTfeNMKbWm0ttV+bGS1S0n4vqp4C3ZiYpyUQIBLp
      fhAxCcKJUfUiOBRqxvAYVGpcbUwQ6pWqBkgm4iQTSQxPbeeNglCvVL0G6Oruw3S03fp0QXhU
      qbou0OMf+ggA2WzmxAMShJOk6imQ69hks1mWl2M47sHv5wvCw071SfHrszx/fRVrK046V+Lj
      H/nQ244q8rksSvcS9BpYjiLo95IvlGhpaa4mJwgPLVVHAF+4hyatTM/gMIO9ne84ppTizvg4
      RbPM3OwsczOzLCzMsbEWI5EunkjQDyMvXl9gbP6tkoP8y69g3pkAwKo4fOm5m6ykcgfSfv7a
      HBPR7cLEUrnCl569SdnazmTG17N89YUxrIoDwK2JJf7q1cndvs++Ms7EzFtVvc+8Ms7kzArC
      NlVHANdV+HwebNvmzJkz7zqqMTx8gVg8TnOoiRa/YhMYOd3NcqKAE/Y/kqUQ99OaXFynWA5z
      ebADgPLUFK5p4rl0kVK5wo3pVX5iuJuutuC+45qIruO6LhcH2imaFm9Mr/J3PnYJQ4e1rQI3
      ZhJ89hMj6JqX6EqapWSGn/rrFwAYn0+i6xoXh7ZzOuNzCTy6xoWh6qt51+NrfxitqqUQ5VyK
      l394g97TQzx2efgdx5SymZ2aRQ+ECOo2GdOlL9LMciLF+UuXCXr1R7IUQrQeTa2qmeCF6CLF
      9ApRo3WPATTN845SiL6dx/ApyRoL9UfVa4DFxUU0t0xHd1+1w4LwyFA1D/Dzv/hZXMdmNSkz
      woRHm6ojAIBueOjv6z3JWAThxHlPAwhCIyAGEBoaMYDQ0BzoxqpTKbG+WcLjlkgXbIb6T7G0
      mmLo7Bl0WU1RqCP2bQClFNHoEmXXwC5u0dY1wNJynJ6uMLFEhtM9rbvrrx+Uw/YXLdGqVWvf
      BnCtAulMgVzR5GMf+RBLU9OUA34MQ0ept0ogDlMKcRT9RUu0atGqWgpRQ2+2MlnKxSyFikZ/
      Z5jFlXXOnz+HIfsDiFYdaR1MUdNoawtDW3j3RxeHZfUBof6Qu0BCQyMGEBoaMYDQ0IgBhIZG
      DCA0NGIAoaE50G1QM5cmtmHS7KmQMRV9HSGWVlIMXxrB75FaCKF+2HciTCmX2ZlZFDqGoRNk
      Z1L8wCmW1yqc7mvHdd1DbbHqui66fjSDk2iJ1r209l8KUSlRtiqspTP0d7aRccDnN1hbT+EL
      9uxmgCUTLFr1oLVvRcMX4n1XRilbFppyKFou4VCA1FaWzg7ZLV6oLw5cCuH3b+/g4NvZu6Gz
      I3JUMQnCiSF3gYSGRgwgNDRiAKGhEQMIDY0YQGhoxABCQ3OgSfELs1OUbAOfZqG8zbQFNZKp
      TQYvXCEcPJpkhSCcBPt+t2qaRqgpSCZdpLXFT2ozAzQzOnqO5Xia5oGOhtwfQLTqU+sAI4BN
      NlcC5aKh49gOAS9MTMzSN3RFSiFEq660DjACvHN/gIGzO98MHkVognCyyEWw0NCIAYSGRgwg
      NDRiAKGhEQMIDY0YQGho9m0ApRRWuYxtO7iOTaVio5RL2bKOIz5BOFYOlFlIJuKktoo0eaFk
      ubS1BimXTdp7h3d3QheEeuBApRA+r4GmG3j9AVr9ig0Fl4fPsLySx2nxSSmEaNWN1sFKIbIl
      AgE/PsMlbbr0R0JM3l1i6NIohrF9ViWlEKJVD1qHL4XYeWzvkl3lhfpD7gIJDY0YQGhoxABC
      QyMGEBoaMYDQ0IgBhIbmQJPiU8k4+Fow7CKpnMX5wW6WV1OcOT3AIVZFF4QT50CZBX9TK7FY
      HKuUo7N/iOjCIp2nWoglswx0b+8XLDvFi1Y9aB3IAGurMQbOnCMU8DI/MYkVDBAIBtgs2riu
      i+u6hwrusBtsiJZo1aq1fwMom3LZIZ3epEAZQi2c6wwzt7TOhQsX2KmEOFQphFLqUP1FS7Rq
      1dr3Fkm14DiO1AKJVl1oyV0goaERAwgNjRhAaGjEAEJDIwYQGhoxgNDQHKgUIjo3Df4WQh6H
      jKnoi4SIxte5OHIJry61EEL9sO88gFIK2yoxMx/D7/MQQLEFXBroILbmcLqv7dBZu7dvZX9Y
      REu07qV1gMyCy9TUHBdHR5mfmcEFPIZGJpPF42+X/QFEq660DqCoaA41kVxLcXawj1xZ0RFu
      YjWZZqCv5UgCFIST4kCrQpw9f363HQhtP/b3dR9ZUIJwUhzbjnZSDi1a9aB1LAbQNO1QJdFK
      qUOXVIuWaNWidSwGOOzVuqZpR3bFL1qidS+tYymHFoR64YHvaq1cl/nZaSqaj4BeIWdp9LQF
      SaS26B/oI7a8QlffID2nwvfVcl2H+dkZHN2PbhfR/K20+hXJjQz9/b3EYqt095+hu6O1lsiI
      Ly6wkTXpjIRIpXP093UTiyfo7usnlYjRFO5k6HRvTVqx6DybeYvWZh9mRdEdaWUpnqSnr5/1
      RJxQWydnB3pq0AIzv8nEfILe9gDrmSIDPaeIryTp6R8guRKnJdLFmf7abkoUsxtMLaaIhHRM
      x6CrvYnYyhq9AwOsxuOEO7oZ7OuqSSs6N01ZeegKB4mtrtM3MMBKPE7bqR5KW0mUt5mLw2ep
      JUO0MDuFhY/2Jg+pTIGBvm6iSzEinb0U0qto/lYunD9Tk9ZqbJFcWXGq2ctKMkXf4CDLS3FO
      dfc++FIITdfo6GjH6/Pg4ueUz8NascLIhUFmxua5eHWUYmazJi1d1+mItOH1+fB4DIr5HNmS
      zcVz/cxOLnLx6mUKW7VpgUZzc4iiWaZoOgyf6WFuJsalq5dZX44S6T6Lskr71vJ6DCpmidXk
      FiNXR0hE5+nsG8ItF2vUguWVNEGfQclSnO3uYGF5nZGrI8Rn5+gZPI9jFmrSUcohlkgT9Gl4
      PAblUoG1VI7LVy+xdHeW/qGL2KV8zXF5PAblQoG1zQKjVy8yf2eG08MjVIpreHwd+DWXWs/i
      PR4Ds5DH1XVwK8SiCYZGRrEKCbz+Trw41HrqshJfwcxlWcuaXLl6ganX7zL8viuU8ysP3gCu
      XebmrQk8hhfLzLKSzdOiO0xOzdN7povJsQl0f217DjhWkVtjU3gMA8PwYJlldM3m7swivQOn
      uDs2gRFsqjUytjI5vDg4boXp+WV6etuZHLtDKNJJIjZH2a01272t5VEOrmbg2BYBv8Hk2ASt
      nd3EF2exVO3/Co9XJ5FM4lRM5mKrdEVCTIxN0NbTw/LCNBVqTEK6Lh5DYzWxBujYloXPpzMx
      NklHfy+Ls3extdpPEgzDQ8Wy8Hk17oxN0jXYy8L0JI7eTD67QrZk1fyGMwwPlXIZNB1w8Ad9
      zExM4Bqt5DIxcmalpk9/gJbWZlyngseA8bG79F/oZ2p8HOVpk2sAobF54COAIDxIxABCQyMG
      aFCUUkeaWa1XxAAPAOWYfP3LX6Nkq9034rvfkM995ykmpuf3HJ+48RpZ0+b7L7/IjbFJ3Hcd
      j85OUSjbe/q9Wz+2kuS5l37Q8CZ44HmARmR9cYbWSAu3br6BadqUshuUyhUqLvz9X34CgPRG
      mrO6zjPPPIsfKFoZpqLrPD5ynu6LikqljO24TN38Ed9+6TUef99lwk1eEpkC3rtTeA0wmtrJ
      5YvgWqTiq/zcE5/hTG8nU3NRvvyNpxka7Gcrk6O9rZa8yKOJjAAPgLuzS3R2dZJYy5Ccfp3B
      4RFs28VxHG7dvg1A+FQPI8NnsQoZkqktDH8TP/mTP0XQqwMukUgn0ZkpJueXOTfQyaVzp7k+
      t05POAC6wfnzQ5ilIkqBXVFcujjArfFpAHRN47HRi/zqZ36hod/8IKUQDwdOhdtjtynYHv7G
      hx4/MtmKWWBsbAw91Mn7R8/fv0MDIgYQGpr/D3J1pm9/nX3uAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Saving Of EVs' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='fuel savings with KM' width='192'>
      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
      CGDihFK8E93zAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
